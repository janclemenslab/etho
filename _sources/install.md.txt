# Installation

## Python packages
- install [miniforge](https://github.com/conda-forge/miniforge)
- install conda packages: `mamba create python=3.10 numpy scipy h5py opencv pandas pyzmq gevent future pillow msgpack-python pyyaml pyserial ipython pip git defopt flammkuchen msgpack-numpy rich fabric psutil pydaqmx pyqtgraph qtpy -c conda-forge -n etho -y`
   - Notes on specific versions:
      - on the rpi PC install `pandas=0.23` and `python=3.7` instead
      - if you want to use the old flycapture SDK (needed for some older FLIR/PointGrey cameras), install `python=3.6`
- Activate the new environment: `conda activate etho`
- Optional: For saving videos using vidread: `pip install vidgear[core]`
- Install pip repos:
  - zerorpc fork (with support for numpy arrays): `pip install git+https://github.com/postpop/zerorpc-python --no-deps`
  - etho: `pip install git+https://github.com/janclemenslab/etho --no-deps`

## Initialize the configuration and test
- Initialize config files and folders: `etho init`
- Start the GUI: `etho gui`

## Hardware specific drivers and SDKs
- ximea cameras: driver and python package from [https://www.ximea.com/support/wiki/apis/python]()
- Spinnaker (FLIR cameras) cameras: driver and python package from [https://www.flir.eu/products/spinnaker-sdk/]()
- flycapture (old FLIR/PointGrey cameras) cameras: driver and python package from [https://www.flir.com/products/flycapture-sdk/]() (only works with python 3.6)
- Basler pylon:
   - drivers: [pylon](https://www.baslerweb.com/en/software/pylon/)
   - python: [pypylon](https://github.com/basler/pypylon#Installation) `pip install pypylon`
- ni daqmx driver:
   - drivers: [NI daqmx](https://www.ni.com/en-us/support/downloads/drivers/download.ni-daqmx.html)
   - python package [pydaqmx](https://github.com/clade/PyDAQmx) is installed by default
- hamamatsu DCAM (e.g. Orca Flash CMOS):
   - driver: [DCAM driver](https://dcam-api.com/downloads/)
   - python: `conda install -c conda-forge pylablib`, [pylab](http://pylablib.readthedocs.io/)
- lighcrafter stuff:

### Raspbery PI
- gpiozero [https://gpiozero.readthedocs.io/en/stable/installing.html]()
- picamera should come pre-installed in raspbian [https://picamera.readthedocs.io/en/latest/install.html](): `sudo pip install "picamera[array]"`
- soundboard
- Temperature and humidity sensor adafruit_dht: [https://docs.circuitpython.org/projects/dht/en/latest/](): `pip3 install adafruit-circuitpython-dht`, `sudo apt-get install libgpiod2`

## Set up passwordless SSH
First, open a terminal and execute the following command to generate public/private RSA key pair:
```
ssh-keygen
```
`ssh-keygen` generates public/private rsa key pair. You can click enter without entering anything for a default file location and empty passphrase.

Your public key has been saved in C:\Users\[username]/.ssh/id_rsa.pub if you didn’t change the file location.
Open id_rsa.pub with a text editor so that we can append the generated SSH public key to existing keys in the destination server.

Connect to the destination server using ssh and your password from PowerShell.
Open the “authorized_keys” file with an editor:
```
code ~/.ssh/authorized_keys
```

Copy the contents of the “id_rsa.pub” (which was open in Notepad++) and append to the “authorized_keys” file in the server.
